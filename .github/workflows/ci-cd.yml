# .github/workflows/ci-cd.yml
name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1) Faz checkout do repositório
      - name: Checkout do código
        uses: actions/checkout@v3

      # 2) Configura JDK 11
      - name: Configurar JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'ant'

      # 3) (OPCIONAL) Verifica se o driver Postgres já existe em lib/
      - name: Verificar existência do driver PostgreSQL
        run: |
          if [ -f lib/postgresql-42.7.3.jar ]; then
            echo "Driver PostgreSQL encontrado em lib/."
          else
            echo "ERRO: driver PostgreSQL NÃO encontrado em lib/." >&2
            exit 1
          fi

      # 4) (OPCIONAL) Verifica se o JUnit Console Standalone já existe em lib/
      - name: Verificar existência do JUnit Console Standalone
        run: |
          if [ -f lib/junit-platform-console-standalone-1.9.2.jar ]; then
            echo "JUnit Platform Console Standalone encontrado em lib/."
          else
            echo "ERRO: JUnit Platform Console Standalone NÃO encontrado em lib/." >&2
            exit 1
          fi

      # 5) Exibe a versão do Ant (já vem instalado no ubuntu-latest)
      - name: Verificar versão do Ant
        run: ant -version

      # 6) Executa Ant na target “test” (compila e roda todos os testes)
      - name: Executar Ant → test
        run: ant test

      # 7) (OPCIONAL) Para gerar o JAR final, descomente abaixo:
      # - name: Empacotar JAR final
      #   run: ant jar

      # 8) (OPCIONAL) Para publicar o JAR como artifact:
      # - name: Upload do JAR
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: TryTasks-JAR
      #     path: dist/TryTasks.jar
