<?xml version="1.0" encoding="UTF-8"?>
<project name="TryTasks" default="test" basedir=".">
    <!-- Diretórios principais -->
    <property name="src.dir"           location="src"/>
    <property name="build.classes.dir" location="build/classes"/>
    <property name="lib.dir"           location="lib"/>
    <property name="dist.dir"          location="dist"/>

    <!-- Classpath geral: inclui todos os JARs dentro de lib/ -->
    <path id="project.class.path">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- Cria as pastas de saída, caso não existam -->
    <target name="init">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- Compila todo o código-fonte encontrado em src/ -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}"
               destdir="${build.classes.dir}"
               includeantruntime="false"
               classpathref="project.class.path"
               source="11"
               target="11"/>
    </target>

    <!-- Executa os testes JUnit 5 via Console Standalone -->
    <target name="test" depends="compile">
        <path id="runtime.test.classpath">
            <pathelement location="${build.classes.dir}"/>
            <path refid="project.class.path"/>
        </path>
        <java jar="${lib.dir}/junit-platform-console-standalone-1.9.2.jar"
              fork="true"
              failonerror="true">
            <arg line="--class-path ${toString:runtime.test.classpath} --scan-class-path"/>
        </java>
    </target>

    <!-- Empacota o JAR final do aplicativo (ajuste Main-Class se necessário) -->
    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}/TryTasks.jar" basedir="${build.classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="com.example.trytasks.TryTasks"/>
            </manifest>
        </jar>
    </target>

    <!-- Limpa os diretórios de build e distribuição -->
    <target name="clean">
        <delete dir="${build.classes.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
</project>
